---
import { cn } from "@/lib/utils";

interface Props {
  name: string;
  icon?: string;
  iconComponent?: any;
  color: string;
  gradientFrom: string;
  gradientTo: string;
  borderColor: string;
  shadowColor: string;
  textColor: string;
  pattern?: string;
}

const {
  name,
  icon,
  iconComponent: IconComponent,
  color,
  gradientFrom,
  gradientTo,
  borderColor,
  shadowColor,
  textColor,
  pattern = "radial-gradient(circle_at_30%_50%,theme(colors.gray.500/10)_1px,transparent_6px)",
} = Astro.props;
---

<div class="flex flex-col items-center justify-center p-2">
  <div
    class={`relative overflow-hidden rounded-2xl bg-gradient-to-br ${gradientFrom} ${gradientTo} backdrop-blur-sm border ${borderColor} shadow-md hover:${shadowColor} hover:shadow-lg transition-all duration-300 hover:scale-[1.02] hover:-translate-y-0.5 group animate-pulse-slow`}
    style={`--pattern: ${pattern}`}
  >
    <!-- Icon Container -->
    <div class="p-6 flex items-center justify-center">
      {
        icon ? (
          <div class="relative h-12 w-12 z-10">
            <img
              alt={`${name} Icon`}
              loading="lazy"
              width="48"
              height="48"
              decoding="async"
              data-nimg="1"
              class={cn(textColor, "select-none pointer-events-none")}
              style="color:transparent"
              src={icon}
            />
          </div>
        ) : IconComponent ? (
          <IconComponent class={`h-12 w-12 ${textColor} z-10`} />
        ) : null
      }
    </div>

    <!-- Hover Label -->
    <div
      class="absolute bottom-0 left-0 right-0 h-0 bg-white/10 dark:bg-black/20 backdrop-blur-sm group-hover:h-8 transition-all duration-300 flex items-center justify-center overflow-hidden"
    >
      <span
        class={`text-xs font-semibold ${textColor} opacity-0 group-hover:opacity-100 transition-opacity duration-300 delay-100`}
      >
        {name}
      </span>
    </div>
  </div>
</div>

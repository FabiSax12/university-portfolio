---
import { CheckCircle, Clock, Circle, BookOpen } from "lucide-astro";
import type { Course } from "@/data/university-progress";

interface Props {
  course: Course;
  categoryColor: {
    primary: string;
    secondary: string;
    bg: string;
    border: string;
  };
}

const { course, categoryColor } = Astro.props;

const getStatusIcon = (status: string) => {
  switch (status) {
    case "completed":
      return CheckCircle;
    case "current":
      return Clock;
    default:
      return Circle;
  }
};

const getStatusColor = (status: string) => {
  switch (status) {
    case "completed":
      return "text-green-500 dark:text-green-400";
    case "current":
      return "text-blue-500 dark:text-blue-400";
    default:
      return "text-zinc-400 dark:text-zinc-500";
  }
};

const getStatusBg = (status: string) => {
  switch (status) {
    case "completed":
      return "bg-green-50 dark:bg-green-900/20 border-green-200 dark:border-green-700";
    case "current":
      return "bg-blue-50 dark:bg-blue-900/20 border-blue-200 dark:border-blue-700";
    default:
      return "bg-zinc-50 dark:bg-zinc-800/50 border-zinc-200 dark:border-zinc-600";
  }
};

const getStatusText = (status: string) => {
  switch (status) {
    case "completed":
      return "Completada";
    case "current":
      return "En Curso";
    default:
      return "Pendiente";
  }
};

const StatusIcon = getStatusIcon(course.status);
---

<div
  class={`${getStatusBg(course.status)} rounded-xl p-4 border transition-all duration-300 hover:shadow-md hover:-translate-y-0.5 group`}
>
  <div class="flex items-center justify-between">
    <div class="flex items-center gap-3 flex-1 min-w-0">
      <!-- Status Icon -->
      <div
        class={`flex-shrink-0 ${course.status === "current" ? "animate-pulse" : ""}`}
      >
        <StatusIcon class={`w-5 h-5 ${getStatusColor(course.status)}`} />
      </div>

      <!-- Course Info -->
      <div class="flex-1 min-w-0">
        <h4
          class="font-medium text-zinc-900 dark:text-white text-sm leading-tight group-hover:text-violet-600 dark:group-hover:text-violet-400 transition-colors"
        >
          {course.name}
        </h4>

        <div class="flex items-center gap-2 mt-1">
          <span
            class={`text-xs px-2 py-1 rounded-full font-medium ${
              course.status === "completed"
                ? "bg-green-100 dark:bg-green-900/30 text-green-700 dark:text-green-300"
                : course.status === "current"
                  ? "bg-blue-100 dark:bg-blue-900/30 text-blue-700 dark:text-blue-300"
                  : "bg-zinc-100 dark:bg-zinc-700 text-zinc-600 dark:text-zinc-400"
            }`}
          >
            {getStatusText(course.status)}
          </span>

          {
            course.credits && (
              <div class="flex items-center gap-1 text-xs text-zinc-500 dark:text-zinc-400">
                <BookOpen class="w-3 h-3" />
                <span>{course.credits} crÃ©ditos</span>
              </div>
            )
          }
        </div>
      </div>
    </div>

    <!-- Progress Indicator -->
    <div class="flex-shrink-0 ml-2">
      {
        course.status === "completed" && (
          <div class="w-2 h-2 bg-green-500 rounded-full" />
        )
      }
      {
        course.status === "current" && (
          <div class="w-2 h-2 bg-blue-500 rounded-full animate-pulse" />
        )
      }
      {
        course.status === "pending" && (
          <div class="w-2 h-2 bg-zinc-300 dark:bg-zinc-600 rounded-full" />
        )
      }
    </div>
  </div>

  {
    course.code && (
      <div class="mt-2 pt-2 border-t border-current/10">
        <span class="text-xs text-zinc-500 dark:text-zinc-400 font-mono">
          {course.code}
        </span>
      </div>
    )
  }
</div>

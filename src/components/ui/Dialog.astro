---
import { X } from "lucide-astro";

interface Props {
  id: string;
  title: string;
}

const { id, title } = Astro.props;
---

<div
  id={`dialog-backdrop-${id}`}
  class="hidden absolute inset-0 z-50 bg-black/40 animate-in duration-300 fade-in-0 backdrop-blur-xl"
  aria-hidden="true"
>
</div>

<dialog
  id={`dialog-${id}`}
  class="fixed top-1/2 -translate-y-1/2 left-1/2 -translate-x-1/2 z-[100] bg-white dark:bg-zinc-800/95 rounded-xl shadow-2xl max-w-md w-full animate-fade-in-up opacity-0"
  aria-labelledby={`dialog-title-${id}`}
  aria-modal="true"
>
  <div
    class="px-6 py-4 border-b border-zinc-200 dark:border-zinc-700 flex items-center justify-between"
  >
    <h3 class="text-xl font-semibold text-zinc-900 dark:text-white">
      {title}
    </h3>
    <button
      class="p-1.5 rounded-full hover:bg-zinc-100 dark:hover:bg-zinc-700 text-zinc-500 dark:text-zinc-400 transition-colors cursor-pointer"
      aria-label="Cerrar"
      id={`close-dialog-${id}`}
    >
      <X class="w-5 h-5 pointer-events-none" />
    </button>
  </div>
  <slot />
</dialog>

<script is:inline define:vars={{ id }}>
  const dialog = document.getElementById(`dialog-${id}`);
  const backdrop = document.getElementById(`dialog-backdrop-${id}`);
  const closeButton = document.getElementById(`close-dialog-${id}`);

  // Funci칩n para abrir el di치logo
  window[`openDialog${id}`] = () => {
    dialog.showModal();
    backdrop.classList.remove("hidden");
    document.body.style.overflow = "hidden"; // Deshabilita el scroll del cuerpo
  };

  // Funci칩n para cerrar el di치logo
  const closeDialog = () => {
    dialog.close();
    backdrop.classList.add("hidden");
    document.body.style.overflow = "auto"; // Habilita el scroll del cuerpo
  };

  closeButton.addEventListener("click", closeDialog);
</script>
